import tensorflow as tf

all_node = 100352
img_size = 224
batch_size = 256
output_size = 1
input_data = tf.placeholder("float", [batch_size, img_size*img_size*3])
label = ("float", [batch_size, output_size])

def Cov(x, s, weight, _offset, _scale):
	h = tf.nn.conv2d(x, weight, strides = [1, s, s,1], padding = "SAME")
	h_mean , h_var= tf.nn.moments(h, 0)
	h = tf.nn.batch_normalization(h, h_mean, h_var, _offset, _scale, variance_epsilon=0.001, name=None)
	return tf.nn.relu(h)

def ConvNet(x, s, weight1, weight2, weight3, _offset1, _offset2, _offset3, _scale1, _scale2, _scale3):
	h1 = Cov(x, s, weight1, _offset1, _scale1)
	s = 1
	h2 = Cov(h1, s, weight2, _offset2, _scale2)
	return Cov(h2, s, weight3, _offset3, _scale3)
	
def IncreaseResNet(x, s, weight1, weight2, weight3, _offset1, _offset2, _offset3, _scale1, _scale2, _scale3, weight):
	r = ConvNet(x, s, weight1, weight2, weight3, _offset1, _offset2, _offset3, _scale1, _scale2, _scale3)
	x = tf.nn.conv2d(x, weight, strides = [1,s,s,1], padding = "SAME")
	return r+x

def ResNet(x, s, weight1, weight2, weight3, _offset1, _offset2, _offset3, _scale1, _scale2, _scale3):
	r = ConvNet(x, s, weight1, weight2, weight3, _offset1, _offset2, _offset3, _scale1, _scale2, _scale3)
	return r+x	
	
def ConvBlock(x, s, i_index, f_index, index_re, weights, offsets, scales, weight_re):
	c = IncreaseResNet(x, s, 
	weights[i_index], weights[i_index+1], weights[i_index+2],
	offsets[i_index], offsets[i_index+1], offsets[i_index+2],
	scales[i_index], scales[i_index+1], scales[i_index+2], 	
	weight = weight_re[index_re])	
	
	s = 1
	for index in range(i_index+3,f_index,3):
		c = ResNet(c, s,
		weights[index], weights[index+1], weights[index+2],
		offsets[index], offsets[index+1], offsets[index+2], 
		scales[index], scales[index+1], scales[index+2])
		
	return c
	
def model(x, weight, offsets, scales):
	index = 0
	index_re = 0
	x = tf.reshape(x, [-1, img_size, img_size, 3])

	s = 2
	c = Cov(x, s , weights[index], offsets[index], scales[index]) #112,64
	index+=1
	c = tf.nn.max_pool(c, ksize =[1,3,3,1], strides= [1,2,2,1], padding="SAME") #56,64
	
	#Cov_2
	f_index=index+9
	s = 1
	c = ConvBlock(c, s, index, f_index, index_re, weights, offsets, scales, weight_re)
	index_re+=1	
	index+=9
	
	#Cov_3
	f_index=index+12
	s = 2
	c = ConvBlock(c, s, index, f_index, index_re, weights, offsets, scales, weight_re)
	index_re+=1	
	index+=12
	
	#Cov_4
	f_index=index+69
	c = ConvBlock(c, s, index, f_index, index_re, weights, offsets, scales, weight_re)
	index_re+=1	
	index+=69		
	
	#Cov_5
	f_index=index+9
	c = ConvBlock(c, s, index, f_index, index_re, weights, offsets, scales, weight_re)
	
	avg = tf.nn.avg_pool(c, ksize = [1,2,2,1], strides = [1,1,1,1], padding = "SAME")
	fc_input = tf.reshape(avg, [-1,all_node])
	fc_output = tf.matmul(fc_input, weight_fc)
	return tf.matmul(fc_output, weight_output)
